version: 1
applications:
  - appRoot: fullstack
    frontend:
      phases:
        preBuild:
          commands:
            # run install inside the app root where the package-lock.json lives
            - 'echo "PWD: $(pwd)"'
            - 'echo "Listing repo root contents:" && ls -la || true'
            - 'echo "Installing dependencies in app root (using lockfile here)..."'
            - 'npm ci || (echo "npm ci failed, falling back to npm install" && npm install)'
            # ensure target dir exists inside the app root for copied artifacts
            - mkdir -p "fullstack/smart-contract/artifacts"
            # try copying artifacts from either possible locations in the repo root
            - |
              echo "Checking possible artifact locations from repo root..."
              if [ -d "../smart contract/artifacts" ]; then
                echo "Copying artifacts from '../smart contract/artifacts'..."
                cp -a "../smart contract/artifacts/." "smart-contract/artifacts/" || true
              elif [ -d "../smart-contract/artifacts" ]; then
                echo "Copying artifacts from '../smart-contract/artifacts'..."
                cp -a "../smart-contract/artifacts/." "smart-contract/artifacts/" || true
              elif [ -d "smart contract/artifacts" ]; then
                echo "Copying artifacts from 'smart contract/artifacts' (relative to app root)..."
                cp -a "smart contract/artifacts/." "smart-contract/artifacts/" || true
              elif [ -d "smart-contract/artifacts" ]; then
                echo "Copying artifacts from 'smart-contract/artifacts' (relative to app root)..."
                cp -a "smart-contract/artifacts/." "smart-contract/artifacts/" || true
              else
                echo "No smart contract artifacts directory found at expected locations (from app root). Listing app root for debugging:" && ls -la || true
              fi
        build:
          commands:
            - 'echo "Running npm run build..."'
            - npm run build
            - 'echo "Build complete! Checking build artifacts..."'
            - ls -la .next/static/chunks/ | head -20
            - echo "Build completed at $(date +%s)" > .next/BUILD_TIMESTAMP
            # If a CloudFront Distribution ID is provided via CF_DIST_ID env var, invalidate HTML and static assets
            - |
              if [ -n "$CF_DIST_ID" ]; then
                echo "CF_DIST_ID provided, creating invalidation for /_next/static/chunks/* and /*.html ..."
                aws cloudfront create-invalidation --distribution-id "$CF_DIST_ID" --paths "/_next/static/chunks/*" "/_next/static/*" "/*.html" "/index.html" || true
              else
                echo "CF_DIST_ID not set, skipping CloudFront invalidation."
              fi
      artifacts:
        # baseDirectory is relative to the configured appRoot (fullstack),
        # so use .next instead of fullstack/.next
        baseDirectory: .next
        files:
          - "**/*"
      cache:
        paths:
          - fullstack/node_modules/**
          - fullstack/.next/cache/**
