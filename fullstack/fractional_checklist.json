{
  "project": "Fractional dApp (Hedera)",
  "goal": "Achieve full on-chain MVP and prepare for hackathon pitch",
  "categories": [
    {
      "name": "Core Product Functionality",
      "tasks": [
        {
          "item": "Wallet connect working via HashConnect on Hedera Testnet",
          "status": "todo"
        },
        {
          "item": "Mint Asset: Create NFT (HTS) and Fraction Token (HTS)",
          "status": "todo"
        },
        {
          "item": "Deploy DividendDistributor smart contract (HSCS)",
          "status": "todo"
        },
        {
          "item": "Upload metadata to IPFS and/or HFS (no Postgres)",
          "status": "todo"
        },
        { "item": "Display asset data from IPFS/HFS", "status": "todo" },
        { "item": "Enable investors to buy fraction tokens", "status": "todo" },
        {
          "item": "Issuer deposits rewards (HBAR or HTS) to contract",
          "status": "todo"
        },
        { "item": "Investors claim rewards successfully", "status": "todo" },
        {
          "item": "All transactions show verifiable HashScan links",
          "status": "todo"
        },
        {
          "item": "Mirror Node shows balances and contract events",
          "status": "todo"
        },
        {
          "item": "Backend is stateless (no local DB dependency)",
          "status": "todo"
        }
      ]
    },
    {
      "name": "Technical Stability & Demo Resilience",
      "tasks": [
        {
          "item": "Validate .env configuration for Hedera Testnet",
          "status": "todo"
        },
        { "item": "API endpoints responsive (no lag)", "status": "todo" },
        {
          "item": "Add loading/error toasts for transactions",
          "status": "todo"
        },
        {
          "item": "Clean console logs (no JS or backend errors)",
          "status": "todo"
        },
        {
          "item": "Handle wallet reconnect/disconnect cleanly",
          "status": "todo"
        },
        { "item": "Test multi-wallet flow (2–3 accounts)", "status": "todo" },
        {
          "item": "Dry run full mint→buy→deposit→claim flow in under 2 min",
          "status": "todo"
        },
        {
          "item": "Backup demo asset pre-minted for fallback",
          "status": "todo"
        }
      ]
    },
    {
      "name": "Bonus Features",
      "tasks": [
        { "item": "Fractionalize existing Hedera NFT", "status": "todo" },
        { "item": "Display HFS file ID for each asset", "status": "todo" },
        { "item": "Live portfolio data from Mirror Node", "status": "todo" },
        {
          "item": "Add metrics (TVL, total rewards distributed)",
          "status": "todo"
        },
        {
          "item": "Access control: only creator can deposit rewards",
          "status": "todo"
        },
        { "item": "Record short demo video", "status": "todo" }
      ]
    },
    {
      "name": "Story & Problem Validation",
      "tasks": [
        {
          "item": "Clear problem statement: high NFT cost / low access",
          "status": "todo"
        },
        {
          "item": "Target users defined (creators, investors, collectors)",
          "status": "todo"
        },
        {
          "item": "Ecosystem fit: boosts Hedera TVL & liquidity",
          "status": "todo"
        },
        {
          "item": "Differentiate from other RWA/NFT projects",
          "status": "todo"
        },
        { "item": "Highlight full on-chain (no DB) design", "status": "todo" }
      ]
    },
    {
      "name": "Pitch Deck & Presentation",
      "tasks": [
        { "item": "Create 5–7 slide deck", "status": "todo" },
        { "item": "Include architecture flow diagram", "status": "todo" },
        { "item": "Add demo screenshots & HashScan links", "status": "todo" },
        {
          "item": "Include future scope (Fractionalize any NFT, P2P trading)",
          "status": "todo"
        },
        { "item": "Finalize pitch script (2-minute version)", "status": "todo" }
      ]
    },
    {
      "name": "Final Verification",
      "tasks": [
        {
          "item": "No Postgres or centralized DB used anywhere",
          "status": "todo"
        },
        { "item": "All transactions visible on HashScan", "status": "todo" },
        {
          "item": "App functions fully from wallet connection to payout",
          "status": "todo"
        },
        {
          "item": "Smooth UX (no blockers or broken states)",
          "status": "todo"
        },
        {
          "item": "Problem, solution, and impact explained in under 60 seconds",
          "status": "todo"
        }
      ]
    }
  ]
}
